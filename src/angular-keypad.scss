//
//
//
// $KEYPAD
//
//
// @author Benjamin Charity <ben@benjamincharity.com>
//
// @doc
//  Styles for the keypad
// @end




// <div> primary keypad container
.bc-keypad {
  // Define colors
  $color_black: #000;
  $color_white: #fff;
  $color_light_gray: #ccc;
  $single_button: calc(100% / 3);
  $double_button: calc(200% / 3);
  $triple_button: 100%;

  // Define a nice scale effect animation
  @keyframes ripple {
    100% {
      opacity: 0;
      transform: scale(2.5);
    }
  }

  display: flex;
  flex-flow: row wrap;
  overflow: hidden;
  padding-bottom: .375em;
  text-align: center;

  // <span> target the span injected by angular-ripple
  .angular-ripple {
    background-color: rgba($color_black, .1);
    border-radius: 50%;
    display: block;
    position: absolute;
    transform: scale(0);

    &.animate {
      animation: ripple .3s linear;
    }
  }

  &__key {
    position: relative;
    text-align: center;
    width: $single_button;

    &--left {
        &.bc-keypad--noCenter {
            &.bc-keypad--noRight {
                width: $triple_button;
            }
        }
        &.bc-keypad--noRight {
            width: $double_button;
        }
    }

    &--right {
        &.bc-keypad--noCenter {
            width: $double_button;
            &.bc-keypad--noLeft {
                width: $triple_button;
            }
        }
        &.bc-keypad--noLeft {
            width: $double_button;
        }
    }

    &::before {
      display: block;
      content: '';
      padding-top: 50%;
      width: 100%;
    }

    // <button> number button
    &-button {
      background: none;
      background-color: transparent;
      border: 0;
      color: inherit;
      cursor: pointer;
      font-size: 1.4rem;
      line-height: 1.5em;
      outline: 0;
      padding: 2%;
      position: absolute;
      bottom: 0;
      left: 0;
      right: 0;
      top: 0;
      text-align: center;
      width: 100%;

      // you should define your own 'active' styles per project
      &:focus {
        outline: 0;
      }

      // create pseudo element for underline
      &::after {
        background-color: $color_light_gray;
        content: '';
        display: block;
        height: 1px;
        position: absolute;
        left: 10%;
        right: 10%;
        // angular-ripple adds overflow: hidden so this cannot be below 0
        bottom: 0;
      }

      // icon
      svg {
        height: 44px;
        position: absolute;
        left: 50%;
        top: 50%;
        transform: translate(-50%, -50%);
        width: 50px;
      }

      &--icon {
        background-size: 50%;
        background-position: 45% 50%;
        background-repeat: no-repeat;
        border: 0;
        position: relative;
      }

      // target 'backspace' button
      &--backspace {
        fill: inherit;
      }

      // target 'submit' button
      &--submit {
        fill: inherit;
      }
    }
  }


  //
  // Angular-Ripple styles
  //
  // target the parent element (the button/link)
  [angular-ripple] {
    overflow: hidden;
    position: relative;

    &.bc-keypad__key-button {
      position: absolute;
    }
  }

}


